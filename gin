#!/bin/bash

# input
################################################################################

# variables
########################################
FRMT='<Hostname> <User> <Port> <PrivateSSHKeyFilePath> <OptionalComments>'
LISTFILE=~/.gin.txt

# functions
########################################

# help text
f_help () {
  echo "
This script types out ssh commands for you and executes them.
GIN stands for \"Get IN\".

Reference (List) File
  The reference file is used to populate the hostname list at the second prompt:
    $LISTFILE
  The reference file requires 4 sections in it (separated by spaces):
    $FRMT

SYNTAX:
  # $0 [OPTIONS]

OPTIONS:
  -h, --help    display this help text
  -l, --list    display reference file contents
  -e, --edit    edit reference file
  <Nothing>     run/execute this script

" ;exit
}

# set editor
f_editor () {
  if [[ -z $EDITOR ]] ;then
    if [[ `which vim` ]] ;then EDITOR='vim'
    elif [[ `which nano` ]] ;then EDITOR='nano'
    elif [[ `which emacs` ]] ;then EDITOR='emacs'
    else EDITOR='vi' ;fi
  fi
  echo "Editor is: `which $EDITOR`"
}

# edit list file
f_edit () { f_editor ;$EDITOR $LISTFILE ;exit ; }

# display list file
f_list () { cat $LISTFILE ;exit ; }

# process options
########################################
while (( "$#" > 0 )) ;do
  case $1 in
    '-h'|'--help')  f_help ;;
    '-e'|'--edit')  f_edit ;;
    '-l'|'--list')  f_list ;;
    "")  break ;;
    *)  echo "Error: Unknown option(s): $@" ;exit ;;
  esac
done

# prompts
########################################

# fix list file permissions
chmod 640 $LISTFILE

# if needed, create list file
if [[ ! -f $LISTFILE ]] ;then
  echo "$FRMT" > $LISTFILE ;fi

# first prompt: filter list
clear ;read -p "
Enter a string to filter the hostname list (case-insensitive grep).
To view all hosts, leave blank and hit \"Enter\".
[selection]: " SELECTION

LISTOPTIONS=`grep -i "$SELECTION" $LISTFILE`

# second prompt: selection
COUNT=`echo "$LISTOPTIONS" |wc -l |xargs`
LISTNUM=`echo "$LISTOPTIONS" |sort |cat -n |column -t`

read -p "
`echo "$LISTNUM" |column -t`

Which server do you want to log into?
[1-$COUNT, (q)uit]: " SELECTION

# error checking
if [[ $SELECTION == q ]] || [[ $SELECTION == quit ]] ;then
  echo "Exiting..." ;exit
elif [[ $SELECTION -lt 1 ]] || [[ $SELECTION -gt $COUNT ]] ;then
  echo "Error: invalid selection" ;exit ;fi

# set variables
########################################
HOST=`echo "$LISTNUM" |grep "^$SELECTION\ " |awk '{print $2}' |awk '{print $1}'`
USER=`echo "$LISTNUM" |grep "^$SELECTION\ " |awk '{print $3}' |awk '{print $1}'`
PORT=`echo "$LISTNUM" |grep "^$SELECTION\ " |awk '{print $4}' |awk '{print $1}'`
KEY=`echo "$LISTNUM" |grep "^$SELECTION\ " |awk '{print $5}' |awk '{print $1}'`
NOTE=`echo "$LISTNUM" |grep "^$SELECTION\ " |awk '{$1=$2=$3=$4=$5="" ;print $0}' |awk '{print $1}'`

# process
################################################################################

# ssh into server
########################################
echo "

HOST=$HOST
USER=$USER
PORT=$PORT
KEY=$KEY
NOTE=$NOTE

ssh -p $PORT -i $KEY $USER@$HOST

"
ssh -p $PORT -i $KEY $USER@$HOST

# output
################################################################################
